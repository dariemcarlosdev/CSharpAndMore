Abstract Factory Design Pattern.
ref: https://dotnettutorials.net/lesson/abstract-factory-design-pattern-csharp/

What is Abstract Factory Design Pattern?

According to Gang of 4 definition provide a way to encapsulate a group of individual factories that have a common theme without specifying their concrete classes.

In Simple words, Abstract Factory is a super factory that creates other factories. This factory is also called Factory of factories.

Implementation of Abstract Factory Desig Pattern:

1. Creating Abstract Product.

Create an Interface, this interface declare the method of the Product.

2. Create concret products.

This is the classes that implements the Abstract Factory Interface to create concret products.

3. Creating the Abstract Factory.

AbstractFactory declares an interface for creating families of related dependent objects (Concret Factories) without specifying their concrete classes (Concrete Products).

In the example, The GetAnimal method is an abstract method that is going to be implemented by the child factory classes. 
The CreateAnimalFactory method takes an input parameter i.e. factory type and then creates and returns the appropriate factory object to the caller.

4. Creating Concret Factory.

This is a class that implements the Abstract Factory class. n our example, this class is going to implement the GetAnimal method of Animal factory class. 
There are two types of concrete abstract factories in our example i.e. LandAnimalfactory and SeaAnimalfactory.
In the example project, the GetAnimal method creates and return the appropriate Land Animal object (i.e. Dog, cat, and Lion) based on the input parameter.
the same for Sea Animal object.

5. Client.

The client use the Abstract Factory and Abtract Product Interface to create a family of related objects.

- Create Abstract Factory object passing the Factory Type.
- Create the concrete product passing the product type.

Point to remember:

- Abstract Factory Pattern provide an interface for creating a family of related dependent objects without specify their concrets classes.
- The Abstract Factory provide a way of encapsulate a group of individual factories that have a common theme without especifying their concret classes.
- The abstract Factory Design Pattern is merely an extension to the factory method pattern, that allow you to create object without being concerned about the actual class of the object being created.
- Abstract means hiding some information and factory means which produces the products and pattern means a design.
  So, the Abstract Factory Pattern is a software design pattern that provides a way to encapsulate a group of individual factories that have a common theme.

  When to use Abstract Factory Design Pattern?

- When you want to create a group of related objects or dependent objects which must be used together.
- When the system shoud configured to work with multiple families of products.
- When the concrete Classes should be decoupled from clients.

Differences between Abstract Factory and Factory Method Design Pattern:

- Abstract Factory Design Pattern adds a layer of abstraction to the Factory Method Design Pattern
- The Abstract Factory design pattern implementation can have multiple factory methods
- Similar products of a factory implementation are grouped in Abstract factory
- The Abstract Factory Pattern uses object composition to decouple applications from specific implementations
- The Factory Method Pattern uses inheritance to decouple applications from specific implementations




